spring:
  application:
      name: transaction-api
  datasource:
    name: transactionDataSource
    driver-class-name: org.postgresql.Driver    
    url: ${PROPOSAL_DATASOURCE_URL:jdbc:postgresql://localhost:5433/transaction-db}
    password: ${PROPOSAL_DATASOURCE_PASSWORD:password}
    username: ${PROPOSAL_DATASOURCE_USERNAME:postgres}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      pool-name: transactionPool
      connection-test-query: select now()
      maximum-pool-size: 5
      minimum-idle: 1
      connection-timeout: 20000
      idle-timeout: 10000
  jpa:
    defer-datasource-initialization: true
    open-in-view: true
    generate-ddl: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        jdbc:
          lob:
            non_contextual_creation: true
    show-sql: true
   
  kafka:
    topic:
      transactions: transacoes
    bootstrap-servers: ${KAFKA_HOST:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:transaction-api}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: ${KAFKA_AUTO-OFFSET-RESET:latest}

# Keycloak
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/transaction}
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transaction/protocol/openid-connect/certs}  
   
